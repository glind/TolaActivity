# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-11-04 09:31
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminLevelThree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 3')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Admin Level 3',
                'verbose_name_plural': 'Admin Level 3',
            },
        ),
        migrations.CreateModel(
            name='ApprovalAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_limit', models.IntegerField(blank=True, null=True)),
                ('fund', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('approval_user',),
                'verbose_name_plural': 'Tola Approval Authority',
            },
        ),
        migrations.CreateModel(
            name='Benchmarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent_complete', models.IntegerField(blank=True, null=True, verbose_name='% complete')),
                ('percent_cumulative', models.IntegerField(blank=True, null=True, verbose_name='% cumulative completion')),
                ('est_start_date', models.DateTimeField(blank=True, null=True)),
                ('est_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('budget', models.IntegerField(blank=True, null=True, verbose_name='Estimated Budget')),
                ('cost', models.IntegerField(blank=True, null=True, verbose_name='Actual Cost')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('description',),
                'verbose_name_plural': 'Project Components',
            },
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficiary_name', models.CharField(blank=True, max_length=255, null=True)),
                ('father_name', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('signature', models.BooleanField(default=True)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('beneficiary_name',),
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributor', models.CharField(blank=True, max_length=135, null=True)),
                ('description_of_contribution', models.CharField(blank=True, max_length=255, null=True)),
                ('proposed_value', models.IntegerField(blank=True, default=0, null=True, verbose_name='Value')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('contributor',),
            },
        ),
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Capacity')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('capacity',),
                'verbose_name_plural': 'Capacity',
            },
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Checklist', max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('agreement',),
            },
        ),
        migrations.CreateModel(
            name='ChecklistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=255)),
                ('in_file', models.BooleanField(default=False)),
                ('not_applicable', models.BooleanField(default=False)),
                ('global_item', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Checklist')),
            ],
            options={
                'ordering': ('item',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City/Town')),
                ('address', models.TextField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('country', 'name', 'title'),
                'verbose_name_plural': 'Contact',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=255, verbose_name='Country Name')),
                ('code', models.CharField(blank=True, max_length=4, verbose_name='2 Letter Country Code')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name='Description/Notes')),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Longitude')),
                ('zoom', models.IntegerField(default=5, verbose_name='Zoom')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('country',),
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distribution_name', models.CharField(max_length=255)),
                ('distribution_indicator', models.CharField(max_length=255)),
                ('distribution_implementer', models.CharField(blank=True, max_length=255, null=True)),
                ('reporting_period', models.CharField(blank=True, max_length=255, null=True)),
                ('total_beneficiaries_received_input', models.IntegerField(blank=True, null=True)),
                ('distribution_location', models.CharField(blank=True, max_length=255, null=True)),
                ('input_type_distributed', models.CharField(blank=True, max_length=255, null=True)),
                ('distributor_name_and_affiliation', models.CharField(blank=True, max_length=255, null=True)),
                ('distributor_contact_number', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('form_filled_by', models.CharField(blank=True, max_length=255, null=True)),
                ('form_filled_by_position', models.CharField(blank=True, max_length=255, null=True)),
                ('form_filled_by_contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('form_filled_date', models.CharField(blank=True, max_length=255, null=True)),
                ('form_verified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('form_verified_by_position', models.CharField(blank=True, max_length=255, null=True)),
                ('form_verified_by_contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('form_verified_date', models.CharField(blank=True, max_length=255, null=True)),
                ('total_received_input', models.CharField(blank=True, max_length=255, null=True)),
                ('total_male', models.IntegerField(blank=True, null=True)),
                ('total_female', models.IntegerField(blank=True, null=True)),
                ('total_age_0_14_male', models.IntegerField(blank=True, null=True)),
                ('total_age_0_14_female', models.IntegerField(blank=True, null=True)),
                ('total_age_15_24_male', models.IntegerField(blank=True, null=True)),
                ('total_age_15_24_female', models.IntegerField(blank=True, null=True)),
                ('total_age_25_59_male', models.IntegerField(blank=True, null=True)),
                ('total_age_25_59_female', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('distribution_name',),
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 2')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Admin Level 2',
                'verbose_name_plural': 'Admin Level 2',
            },
        ),
        migrations.CreateModel(
            name='Documentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=135, null=True, verbose_name='Name of Document')),
                ('url', models.CharField(blank=True, max_length=135, null=True, verbose_name='URL (Link to document or document repository)')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('file_field', models.FileField(blank=True, null=True, upload_to='uploads')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'Documentation',
            },
        ),
        migrations.CreateModel(
            name='DocumentationApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('documentation', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Evaluate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluate', models.CharField(blank=True, max_length=255, null=True, verbose_name='How will you evaluate the outcome or impact of the project?')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('evaluate',),
                'verbose_name_plural': 'Evaluate',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('page', models.CharField(max_length=135)),
                ('severity', models.CharField(max_length=135)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='FormGuidance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(blank=True, max_length=135, null=True)),
                ('guidance_link', models.URLField(blank=True, null=True)),
                ('guidance', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='FundCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Fund Code')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='HistoricalBudget',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('contributor', models.CharField(blank=True, max_length=135, null=True)),
                ('description_of_contribution', models.CharField(blank=True, max_length=255, null=True)),
                ('proposed_value', models.IntegerField(blank=True, default=0, null=True, verbose_name='Value')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical budget',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProjectAgreement',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('short', models.BooleanField(default=True, verbose_name='Short Form (recommended)')),
                ('date_of_request', models.DateTimeField(blank=True, null=True, verbose_name='Date of Request')),
                ('project_name', models.CharField(help_text='Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, help_text='This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name='Project Activity')),
                ('project_description', models.TextField(blank=True, null=True, verbose_name='Project Description')),
                ('has_rej_letter', models.BooleanField(default=False, help_text='If yes attach copy', verbose_name='If Rejected: Rejection Letter Sent?')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Code')),
                ('cod_num', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project COD #')),
                ('project_design', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity design for')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('staff_responsible', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff Responsible')),
                ('partners', models.BooleanField(default=0, verbose_name='Are there partners involved?')),
                ('name_of_partners', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Partners')),
                ('effect_or_impact', models.TextField(blank=True, null=True, verbose_name='What is the anticipated Outcome or Goal?')),
                ('expected_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected starting date')),
                ('expected_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected ending date')),
                ('expected_duration', models.CharField(blank=True, help_text='[MONTHS]/[DAYS]', max_length=255, null=True, verbose_name='Expected duration')),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('estimated_num_direct_beneficiaries', models.CharField(blank=True, help_text="Please provide achievable estimates as we will use these as our 'Targets'", max_length=255, null=True, verbose_name='Estimated number of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('estimated_num_indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Total Project Budget')),
                ('mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Organizations portion of Project Budget')),
                ('local_total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Estimated Total in Local Currency')),
                ('local_mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Total portion of estimate for your agency', max_digits=12, verbose_name='Estimated Organization Total in Local Currency')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('community_rep', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Representative')),
                ('community_rep_contact', models.CharField(blank=True, help_text='Can have mulitple contact numbers', max_length=255, null=True, verbose_name='Community Representative Contact')),
                ('community_mobilizer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer')),
                ('community_mobilizer_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer Contact Number')),
                ('community_proposal', models.TextField(blank=True, max_length=100, null=True, verbose_name='Community Proposal')),
                ('estimate_male_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Trained')),
                ('estimate_female_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Trained')),
                ('estimate_total_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # Trained')),
                ('estimate_trainings', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Trainings Conducted')),
                ('distribution_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Items Distributed')),
                ('distribution_uom', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit of Measure')),
                ('distribution_estimate', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated # of Items Distributed')),
                ('cfw_estimate_male', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Laborers')),
                ('cfw_estimate_female', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Laborers')),
                ('cfw_estimate_total', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # of Laborers')),
                ('cfw_estimate_project_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Project Days')),
                ('cfw_estimate_person_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Person Days')),
                ('cfw_estimate_cost_materials', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Total Cost of Materials')),
                ('cfw_estimate_wages_budgeted', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Wages Budgeted')),
                ('estimation_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Originated')),
                ('checked_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Checked')),
                ('reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Verified')),
                ('finance_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by Finance')),
                ('me_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by M&E')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approved_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Approved')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('justification_background', models.TextField(blank=True, null=True, verbose_name='General Background and Problem Statement')),
                ('risks_assumptions', models.TextField(blank=True, null=True, verbose_name='Risks and Assumptions')),
                ('justification_description_community_selection', models.TextField(blank=True, null=True, verbose_name='Description of Stakeholder Selection Criteria')),
                ('description_of_project_activities', models.TextField(blank=True, null=True)),
                ('description_of_government_involvement', models.TextField(blank=True, null=True)),
                ('description_of_community_involvement', models.TextField(blank=True, null=True)),
                ('community_project_description', models.TextField(blank=True, help_text='Description must describe how the Community Proposal meets the project criteria', null=True, verbose_name='Describe the project you would like the program to consider')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical project agreement',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProjectComplete',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('short', models.BooleanField(default=True, verbose_name='Short Form (recommended)')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Code')),
                ('project_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Activity')),
                ('expected_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Initiation', null=True)),
                ('expected_end_date', models.DateTimeField(blank=True, help_text='Imported Project Initiation', null=True)),
                ('expected_duration', models.CharField(blank=True, help_text='Imported from Project Initiation', max_length=255, null=True, verbose_name='Expected Duration')),
                ('actual_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Initiation', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('on_time', models.BooleanField(default=None)),
                ('no_explanation', models.TextField(blank=True, null=True, verbose_name='If not on time explain delay')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Estimated Budget')),
                ('actual_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_digits=20, verbose_name='Actual Cost')),
                ('actual_cost_date', models.DateTimeField(blank=True, null=True)),
                ('budget_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Budget versus Actual variance')),
                ('explanation_of_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Explanation of variance')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Estimated Budget for Organization')),
                ('agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('local_total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost')),
                ('local_agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('direct_beneficiaries', models.CharField(blank=True, max_length=255, null=True, verbose_name='Actual Direct Beneficiaries')),
                ('jobs_created', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Jobs Created')),
                ('jobs_part_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Part Time Jobs')),
                ('jobs_full_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Time Jobs')),
                ('progress_against_targets', models.IntegerField(blank=True, null=True, verbose_name='Progress against Targets (%)')),
                ('government_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Government Involvement')),
                ('community_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Involvement')),
                ('community_handover', models.BooleanField(default=None, help_text='Check box if it was completed', verbose_name='CommunityHandover/Sustainability Maintenance Plan')),
                ('capacity_built', models.TextField(blank=True, max_length=755, null=True, verbose_name='Describe how sustainability was ensured for this project?')),
                ('quality_assured', models.TextField(blank=True, max_length=755, null=True, verbose_name='How was quality assured for this project')),
                ('issues_and_challenges', models.TextField(blank=True, null=True, verbose_name='List any issues or challenges faced (include reasons for delays)')),
                ('lessons_learned', models.TextField(blank=True, null=True, verbose_name='Lessons learned')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical project complete',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSiteProfile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Site Name')),
                ('contact_leader', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Name')),
                ('date_of_firstcontact', models.DateTimeField(blank=True, null=True, verbose_name='Date of First Contact')),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Number')),
                ('num_members', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Members')),
                ('info_source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Data Source')),
                ('total_num_households', models.IntegerField(blank=True, null=True, verbose_name='Total # Households')),
                ('avg_household_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), max_digits=25, verbose_name='Average Household Size')),
                ('male_0_14', models.IntegerField(blank=True, null=True, verbose_name='Male age 0-14')),
                ('female_0_14', models.IntegerField(blank=True, null=True, verbose_name='Female age 0-14')),
                ('male_15_24', models.IntegerField(blank=True, null=True, verbose_name='Male age 15-24 ')),
                ('female_15_24', models.IntegerField(blank=True, null=True, verbose_name='Female age 15-24')),
                ('male_25_59', models.IntegerField(blank=True, null=True, verbose_name='Male age 25-59')),
                ('female_25_59', models.IntegerField(blank=True, null=True, verbose_name='Female age 25-59')),
                ('male_over_60', models.IntegerField(blank=True, null=True, verbose_name='Male Over 60')),
                ('female_over_60', models.IntegerField(blank=True, null=True, verbose_name='Female Over 60')),
                ('total_population', models.IntegerField(blank=True, null=True)),
                ('total_male', models.IntegerField(blank=True, null=True)),
                ('total_female', models.IntegerField(blank=True, null=True)),
                ('total_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Land')),
                ('total_agricultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Agricultural Land')),
                ('total_rainfed_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Rain-fed Land')),
                ('total_horticultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Horticultural Land')),
                ('total_literate_peoples', models.IntegerField(blank=True, null=True, verbose_name='Total Literate People')),
                ('literate_males', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Males')),
                ('literate_females', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Females')),
                ('literacy_rate', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='Literacy Rate (%)')),
                ('populations_owning_land', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Land')),
                ('avg_landholding_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), help_text='In hectares/jeribs', max_digits=25, verbose_name='Average Landholding Size')),
                ('households_owning_livestock', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Livestock')),
                ('animal_type', models.CharField(blank=True, help_text='List Animal Types', max_length=255, null=True, verbose_name='Animal Types')),
                ('village', models.CharField(blank=True, max_length=255, null=True, verbose_name='Administrative Level 4')),
                ('latitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude (Decimal Coordinates)')),
                ('longitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude (Decimal Coordinates)')),
                ('status', models.BooleanField(default=True, verbose_name='Site Active')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('admin_level_three', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.AdminLevelThree')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical site profile',
            },
        ),
        migrations.CreateModel(
            name='LandType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classify_land', models.CharField(blank=True, help_text='Rural, Urban, Peri-Urban', max_length=100, verbose_name='Land Classification')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('classify_land',),
            },
        ),
        migrations.CreateModel(
            name='LoggedUser',
            fields=[
                ('username', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=100)),
                ('email', models.CharField(default='user@mercycorps.com', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='Person Responsible')),
                ('frequency', models.CharField(blank=True, max_length=25, null=True, verbose_name='Frequency')),
                ('type', models.TextField(blank=True, null=True, verbose_name='Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('type',),
                'verbose_name_plural': 'Monitors',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Office Name')),
                ('code', models.CharField(blank=True, max_length=255, verbose_name='Office Code')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProfileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(blank=True, max_length=255, verbose_name='Profile Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('profile',),
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gaitid', models.CharField(blank=True, max_length=255, unique=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Program Name')),
                ('funding_status', models.CharField(blank=True, max_length=255, verbose_name='Funding Status')),
                ('cost_center', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('description', models.TextField(blank=True, max_length=765, null=True, verbose_name='Program Description')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('budget_check', models.BooleanField(default=False, verbose_name='Enable Approval Authority')),
                ('country', models.ManyToManyField(to='workflow.Country')),
                ('fund_code', models.ManyToManyField(blank=True, to='workflow.FundCode')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProjectAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short', models.BooleanField(default=True, verbose_name='Short Form (recommended)')),
                ('date_of_request', models.DateTimeField(blank=True, null=True, verbose_name='Date of Request')),
                ('project_name', models.CharField(help_text='Please be specific in your name.  Consider that your Project Name includes WHO, WHAT, WHERE, HOW', max_length=255, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, help_text='This should come directly from the activities listed in the Logframe', max_length=255, null=True, verbose_name='Project Activity')),
                ('project_description', models.TextField(blank=True, null=True, verbose_name='Project Description')),
                ('has_rej_letter', models.BooleanField(default=False, help_text='If yes attach copy', verbose_name='If Rejected: Rejection Letter Sent?')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Code')),
                ('cod_num', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project COD #')),
                ('project_design', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity design for')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('staff_responsible', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff Responsible')),
                ('partners', models.BooleanField(default=0, verbose_name='Are there partners involved?')),
                ('name_of_partners', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Partners')),
                ('effect_or_impact', models.TextField(blank=True, null=True, verbose_name='What is the anticipated Outcome or Goal?')),
                ('expected_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected starting date')),
                ('expected_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Expected ending date')),
                ('expected_duration', models.CharField(blank=True, help_text='[MONTHS]/[DAYS]', max_length=255, null=True, verbose_name='Expected duration')),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('estimated_num_direct_beneficiaries', models.CharField(blank=True, help_text="Please provide achievable estimates as we will use these as our 'Targets'", max_length=255, null=True, verbose_name='Estimated number of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('estimated_num_indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Total Project Budget')),
                ('mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Organizations portion of Project Budget')),
                ('local_total_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Estimated Total in Local Currency')),
                ('local_mc_estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Total portion of estimate for your agency', max_digits=12, verbose_name='Estimated Organization Total in Local Currency')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('community_rep', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Representative')),
                ('community_rep_contact', models.CharField(blank=True, help_text='Can have mulitple contact numbers', max_length=255, null=True, verbose_name='Community Representative Contact')),
                ('community_mobilizer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer')),
                ('community_mobilizer_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Mobilizer Contact Number')),
                ('community_proposal', models.FileField(blank=True, null=True, upload_to='uploads', verbose_name='Community Proposal')),
                ('estimate_male_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Trained')),
                ('estimate_female_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Trained')),
                ('estimate_total_trained', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # Trained')),
                ('estimate_trainings', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Trainings Conducted')),
                ('distribution_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Items Distributed')),
                ('distribution_uom', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit of Measure')),
                ('distribution_estimate', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated # of Items Distributed')),
                ('cfw_estimate_male', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Male Laborers')),
                ('cfw_estimate_female', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Female Laborers')),
                ('cfw_estimate_total', models.IntegerField(blank=True, null=True, verbose_name='Estimated Total # of Laborers')),
                ('cfw_estimate_project_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Project Days')),
                ('cfw_estimate_person_days', models.IntegerField(blank=True, null=True, verbose_name='Estimated # of Person Days')),
                ('cfw_estimate_cost_materials', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Total Cost of Materials')),
                ('cfw_estimate_wages_budgeted', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimated Wages Budgeted')),
                ('estimation_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Originated')),
                ('checked_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Checked')),
                ('reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Verified')),
                ('finance_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by Finance')),
                ('me_reviewed_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Reviewed by M&E')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approved_by_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Approved')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('justification_background', models.TextField(blank=True, null=True, verbose_name='General Background and Problem Statement')),
                ('risks_assumptions', models.TextField(blank=True, null=True, verbose_name='Risks and Assumptions')),
                ('justification_description_community_selection', models.TextField(blank=True, null=True, verbose_name='Description of Stakeholder Selection Criteria')),
                ('description_of_project_activities', models.TextField(blank=True, null=True)),
                ('description_of_government_involvement', models.TextField(blank=True, null=True)),
                ('description_of_community_involvement', models.TextField(blank=True, null=True)),
                ('community_project_description', models.TextField(blank=True, help_text='Description must describe how the Community Proposal meets the project criteria', null=True, verbose_name='Describe the project you would like the program to consider')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
            ],
            options={
                'ordering': ('project_name',),
                'verbose_name_plural': 'Project Initiation',
                'permissions': (('can_approve', 'Can approve initiation'),),
            },
        ),
        migrations.CreateModel(
            name='ProjectComplete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short', models.BooleanField(default=True, verbose_name='Short Form (recommended)')),
                ('activity_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Code')),
                ('project_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Name')),
                ('project_activity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project Activity')),
                ('expected_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Initiation', null=True)),
                ('expected_end_date', models.DateTimeField(blank=True, help_text='Imported Project Initiation', null=True)),
                ('expected_duration', models.CharField(blank=True, help_text='Imported from Project Initiation', max_length=255, null=True, verbose_name='Expected Duration')),
                ('actual_start_date', models.DateTimeField(blank=True, help_text='Imported from Project Initiation', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('on_time', models.BooleanField(default=None)),
                ('no_explanation', models.TextField(blank=True, null=True, verbose_name='If not on time explain delay')),
                ('account_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fund Code')),
                ('lin_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='LIN Code')),
                ('estimated_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Estimated Budget')),
                ('actual_budget', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='What was the actual final cost?  This should match any financial documentation you have in the file.   It should be completely documented and verifiable by finance and any potential audit', max_digits=20, verbose_name='Actual Cost')),
                ('actual_cost_date', models.DateTimeField(blank=True, null=True)),
                ('budget_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Budget versus Actual variance')),
                ('explanation_of_variance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Explanation of variance')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Estimated Budget for Organization')),
                ('agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In USD', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('local_total_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost')),
                ('local_agency_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='In Local Currency', max_digits=12, verbose_name='Actual Cost for Organization')),
                ('exchange_rate', models.CharField(blank=True, help_text='Local Currency exchange rate to USD', max_length=255, null=True)),
                ('exchange_rate_date', models.DateField(blank=True, help_text='Date of exchange rate', null=True)),
                ('beneficiary_type', models.CharField(blank=True, help_text='i.e. Farmer, Association, Student, Govt, etc.', max_length=255, null=True, verbose_name='Type of direct beneficiaries')),
                ('average_household_size', models.CharField(blank=True, help_text='Refer to Form 01 - Community Profile', max_length=255, null=True, verbose_name='Average Household Size')),
                ('indirect_beneficiaries', models.CharField(blank=True, help_text='This is a calculation - multiply direct beneficiaries by average household size', max_length=255, null=True, verbose_name='Estimated Number of indirect beneficiaries')),
                ('direct_beneficiaries', models.CharField(blank=True, max_length=255, null=True, verbose_name='Actual Direct Beneficiaries')),
                ('jobs_created', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Jobs Created')),
                ('jobs_part_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Part Time Jobs')),
                ('jobs_full_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Time Jobs')),
                ('progress_against_targets', models.IntegerField(blank=True, null=True, verbose_name='Progress against Targets (%)')),
                ('government_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Government Involvement')),
                ('community_involvement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Community Involvement')),
                ('community_handover', models.BooleanField(default=None, help_text='Check box if it was completed', verbose_name='CommunityHandover/Sustainability Maintenance Plan')),
                ('capacity_built', models.TextField(blank=True, max_length=755, null=True, verbose_name='Describe how sustainability was ensured for this project?')),
                ('quality_assured', models.TextField(blank=True, max_length=755, null=True, verbose_name='How was quality assured for this project')),
                ('issues_and_challenges', models.TextField(blank=True, null=True, verbose_name='List any issues or challenges faced (include reasons for delays)')),
                ('lessons_learned', models.TextField(blank=True, null=True, verbose_name='Lessons learned')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval Status')),
                ('approval_remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approval Remarks')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Created')),
                ('edit_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Edit Date')),
            ],
            options={
                'ordering': ('project_name',),
                'verbose_name_plural': 'Project Tracking',
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=135, verbose_name='Type of Activity')),
                ('description', models.CharField(max_length=765)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 1')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Country')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Admin Level 1',
                'verbose_name_plural': 'Admin Level 1',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(blank=True, max_length=255, verbose_name='Sector Name')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('sector',),
            },
        ),
        migrations.CreateModel(
            name='SiteProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Site Name')),
                ('contact_leader', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Name')),
                ('date_of_firstcontact', models.DateTimeField(blank=True, null=True, verbose_name='Date of First Contact')),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Number')),
                ('num_members', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of Members')),
                ('info_source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Data Source')),
                ('total_num_households', models.IntegerField(blank=True, null=True, verbose_name='Total # Households')),
                ('avg_household_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), max_digits=25, verbose_name='Average Household Size')),
                ('male_0_14', models.IntegerField(blank=True, null=True, verbose_name='Male age 0-14')),
                ('female_0_14', models.IntegerField(blank=True, null=True, verbose_name='Female age 0-14')),
                ('male_15_24', models.IntegerField(blank=True, null=True, verbose_name='Male age 15-24 ')),
                ('female_15_24', models.IntegerField(blank=True, null=True, verbose_name='Female age 15-24')),
                ('male_25_59', models.IntegerField(blank=True, null=True, verbose_name='Male age 25-59')),
                ('female_25_59', models.IntegerField(blank=True, null=True, verbose_name='Female age 25-59')),
                ('male_over_60', models.IntegerField(blank=True, null=True, verbose_name='Male Over 60')),
                ('female_over_60', models.IntegerField(blank=True, null=True, verbose_name='Female Over 60')),
                ('total_population', models.IntegerField(blank=True, null=True)),
                ('total_male', models.IntegerField(blank=True, null=True)),
                ('total_female', models.IntegerField(blank=True, null=True)),
                ('total_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Land')),
                ('total_agricultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Agricultural Land')),
                ('total_rainfed_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Rain-fed Land')),
                ('total_horticultural_land', models.IntegerField(blank=True, help_text='In hectares/jeribs', null=True, verbose_name='Total Horticultural Land')),
                ('total_literate_peoples', models.IntegerField(blank=True, null=True, verbose_name='Total Literate People')),
                ('literate_males', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Males')),
                ('literate_females', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='% of Literate Females')),
                ('literacy_rate', models.IntegerField(blank=True, help_text='%', null=True, verbose_name='Literacy Rate (%)')),
                ('populations_owning_land', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Land')),
                ('avg_landholding_size', models.DecimalField(decimal_places=14, default=Decimal('0.00'), help_text='In hectares/jeribs', max_digits=25, verbose_name='Average Landholding Size')),
                ('households_owning_livestock', models.IntegerField(blank=True, help_text='(%)', null=True, verbose_name='Households Owning Livestock')),
                ('animal_type', models.CharField(blank=True, help_text='List Animal Types', max_length=255, null=True, verbose_name='Animal Types')),
                ('village', models.CharField(blank=True, max_length=255, null=True, verbose_name='Administrative Level 4')),
                ('latitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Latitude (Decimal Coordinates)')),
                ('longitude', models.DecimalField(decimal_places=16, default=Decimal('0.00'), max_digits=25, verbose_name='Longitude (Decimal Coordinates)')),
                ('status', models.BooleanField(default=True, verbose_name='Site Active')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('admin_level_three', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.AdminLevelThree', verbose_name='Administrative Level 3')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'Site Profiles',
            },
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stakeholder/Organization Name')),
                ('stakeholder_register', models.BooleanField(verbose_name='Has this partner been added to stakeholder register?')),
                ('approval', models.CharField(blank=True, default='in progress', max_length=255, null=True, verbose_name='Approval')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('country', 'name', 'type'),
                'verbose_name_plural': 'Stakeholders',
            },
        ),
        migrations.CreateModel(
            name='StakeholderType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stakeholder Type')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'Stakeholder Types',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=135, verbose_name='Name of Document')),
                ('documentation_type', models.CharField(max_length=135, verbose_name='Type (File or URL)')),
                ('description', models.CharField(max_length=765)),
                ('file_field', models.FileField(blank=True, null=True, upload_to='uploads')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TolaSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_name', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_url', models.CharField(blank=True, max_length=255, null=True)),
                ('tola_report_url', models.CharField(blank=True, max_length=255, null=True)),
                ('tola_tables_url', models.CharField(blank=True, max_length=255, null=True)),
                ('tola_tables_user', models.CharField(blank=True, max_length=255, null=True)),
                ('tola_tables_token', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_disclaimer', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'verbose_name_plural': 'Tola Sites',
            },
        ),
        migrations.CreateModel(
            name='TolaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('mr', 'Mr.'), ('mrs', 'Mrs.'), ('ms', 'Ms.')], max_length=3, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Given Name')),
                ('employee_number', models.IntegerField(blank=True, null=True, verbose_name='Employee Number')),
                ('tables_api_token', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_disclaimer_accepted', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('countries', models.ManyToManyField(blank=True, related_name='countries', to='workflow.Country', verbose_name='Accessible Countries')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tola_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TrainingAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_name', models.CharField(max_length=255)),
                ('implementer', models.CharField(blank=True, max_length=255, null=True)),
                ('reporting_period', models.CharField(blank=True, max_length=255, null=True)),
                ('total_participants', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('community', models.CharField(blank=True, max_length=255, null=True)),
                ('training_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.CharField(blank=True, max_length=255, null=True)),
                ('end_date', models.CharField(blank=True, max_length=255, null=True)),
                ('trainer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('trainer_contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('form_filled_by', models.CharField(blank=True, max_length=255, null=True)),
                ('form_filled_by_contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('total_male', models.IntegerField(blank=True, null=True)),
                ('total_female', models.IntegerField(blank=True, null=True)),
                ('total_age_0_14_male', models.IntegerField(blank=True, null=True)),
                ('total_age_0_14_female', models.IntegerField(blank=True, null=True)),
                ('total_age_15_24_male', models.IntegerField(blank=True, null=True)),
                ('total_age_15_24_female', models.IntegerField(blank=True, null=True)),
                ('total_age_25_59_male', models.IntegerField(blank=True, null=True)),
                ('total_age_25_59_female', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Program')),
                ('project_agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement', verbose_name='Project Initiation')),
            ],
            options={
                'ordering': ('training_name',),
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Admin Level 4')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('admin_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.AdminLevelThree', verbose_name='Admin Level 3')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.District')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Admin Level 4',
                'verbose_name_plural': 'Admin Level 4',
            },
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stake_approving', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='contact',
            field=models.ManyToManyField(blank=True, max_length=255, to='workflow.Contact'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Country'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='filled_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stake_filled', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='formal_relationship_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relationship_document', to='workflow.Documentation', verbose_name='Formal Written Description of Relationship'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Sector'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.StakeholderType'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='vetting_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vetting_document', to='workflow.Documentation', verbose_name='Vetting/ due diligence statement'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='approved_by',
            field=models.ForeignKey(blank=True, help_text='This is the Provincial Line Manager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comm_approving', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='classify_land',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.LandType'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Country'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.District', verbose_name='Administrative Level 2'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='filled_by',
            field=models.ForeignKey(blank=True, help_text='This is the originator', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comm_estimate', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='location_verified_by',
            field=models.ForeignKey(blank=True, help_text='This should be GIS Manager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comm_gis', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='office',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Office'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Province', verbose_name='Administrative Level 1'),
        ),
        migrations.AddField(
            model_name='siteprofile',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProfileType'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='approval_submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_by_complete', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approving_agreement_complete', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='checked_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checking_complete', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='estimated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimating_complete', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='office',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Office'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complete', to='workflow.Program'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='project_agreement',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement', verbose_name='Project Initiation'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='project_type',
            field=models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectType'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing_complete', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Sector'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='site',
            field=models.ManyToManyField(blank=True, to='workflow.SiteProfile'),
        ),
        migrations.AddField(
            model_name='projectcomplete',
            name='stakeholder',
            field=models.ManyToManyField(blank=True, to='workflow.Stakeholder'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='approval_submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_by_agreement', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approving_agreement', to='workflow.TolaUser', verbose_name='Request approval'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='capacity',
            field=models.ManyToManyField(blank=True, to='workflow.Capacity', verbose_name='Sustainability Plan'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='checked_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checking', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='estimated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimating', to='workflow.TolaUser', verbose_name='Originated By'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='evaluate',
            field=models.ManyToManyField(blank=True, to='workflow.Evaluate'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='finance_reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finance_reviewing', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='me_reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing_me', to='workflow.TolaUser', verbose_name='M&E Reviewed by'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='office',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Office', verbose_name='Office'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agreement', to='workflow.Program', verbose_name='Program'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='project_type',
            field=models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectType', verbose_name='Project Type'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewing', to='workflow.TolaUser', verbose_name='Request review'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Sector', verbose_name='Sector'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='site',
            field=models.ManyToManyField(blank=True, to='workflow.SiteProfile'),
        ),
        migrations.AddField(
            model_name='projectagreement',
            name='stakeholder',
            field=models.ManyToManyField(blank=True, to='workflow.Stakeholder', verbose_name='Stakeholders'),
        ),
        migrations.AddField(
            model_name='program',
            name='sector',
            field=models.ManyToManyField(blank=True, to='workflow.Sector'),
        ),
        migrations.AddField(
            model_name='program',
            name='user_access',
            field=models.ManyToManyField(blank=True, to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='office',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Province', verbose_name='Admin Level 1'),
        ),
        migrations.AddField(
            model_name='monitor',
            name='agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement', verbose_name='Project Initiation'),
        ),
        migrations.AddField(
            model_name='monitor',
            name='complete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='approved_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='classify_land',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.LandType'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='country',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Country'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='district',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.District'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='filled_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='location_verified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='office',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Office'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='province',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Province'),
        ),
        migrations.AddField(
            model_name='historicalsiteprofile',
            name='type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProfileType'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='approval_submitted_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='approved_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='checked_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='estimated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='office',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Office'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='program',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Program'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='project_agreement',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='project_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectType'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectcomplete',
            name='sector',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Sector'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='approval_submitted_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='approved_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='checked_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='estimated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='finance_reviewed_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='me_reviewed_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='office',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Office'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='program',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Program'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='project_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectType'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='historicalprojectagreement',
            name='sector',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.Sector'),
        ),
        migrations.AddField(
            model_name='historicalbudget',
            name='agreement',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='historicalbudget',
            name='complete',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workflow.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='historicalbudget',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='submitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='documentation',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Program'),
        ),
        migrations.AddField(
            model_name='documentation',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement'),
        ),
        migrations.AddField(
            model_name='documentation',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Template'),
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Province', verbose_name='Admin Level 1'),
        ),
        migrations.AddField(
            model_name='distribution',
            name='initiation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement', verbose_name='Project Initiation'),
        ),
        migrations.AddField(
            model_name='distribution',
            name='office_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Office'),
        ),
        migrations.AddField(
            model_name='distribution',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Program'),
        ),
        migrations.AddField(
            model_name='distribution',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Province'),
        ),
        migrations.AddField(
            model_name='contact',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Country'),
        ),
        migrations.AddField(
            model_name='checklistitem',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement', verbose_name='Project Initiation'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Country'),
        ),
        migrations.AddField(
            model_name='budget',
            name='agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement', verbose_name='Project Initiation'),
        ),
        migrations.AddField(
            model_name='budget',
            name='complete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workflow.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='distribution',
            field=models.ManyToManyField(blank=True, to='workflow.Distribution'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='program',
            field=models.ManyToManyField(blank=True, to='workflow.Program'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.SiteProfile'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='training',
            field=models.ManyToManyField(blank=True, to='workflow.TrainingAttendance'),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectAgreement', verbose_name='Project Initiation'),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='complete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectComplete'),
        ),
        migrations.AddField(
            model_name='benchmarks',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.SiteProfile'),
        ),
        migrations.AddField(
            model_name='approvalauthority',
            name='approval_user',
            field=models.ForeignKey(blank=True, help_text='User with Approval Authority', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auth_approving', to='workflow.TolaUser'),
        ),
        migrations.AddField(
            model_name='approvalauthority',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workflow.Country'),
        ),
        migrations.AddField(
            model_name='adminlevelthree',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.District', verbose_name='Admin Level 2'),
        ),
        migrations.CreateModel(
            name='TolaUserProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Report Tola User',
                'proxy': True,
                'verbose_name_plural': 'Report Tola Users',
            },
            bases=('workflow.tolauser',),
        ),
    ]
